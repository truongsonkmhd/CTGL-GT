-L·ªçc (filter()) s·∫£n ph·∫©m c√≥ gi√° tr√™n 500.
-√Ånh x·∫° (map()) danh s√°ch s·∫£n ph·∫©m th√†nh danh s√°ch t√™n.
-T√¨m ki·∫øm (findFirst(), findAny()) s·∫£n ph·∫©m c√≥ gi√° cao nh·∫•t.
-S·∫Øp x·∫øp (sorted()) s·∫£n ph·∫©m theo gi√°.
-B·ªè qua (skip()) & Gi·ªõi h·∫°n (limit()) s·ªë l∆∞·ª£ng s·∫£n ph·∫©m.
-Gh√©p danh s√°ch (stream.concat()).
-Lo·∫°i b·ªè ph·∫ßn t·ª≠ tr√πng (distinct()).
-S·ª≠ d·ª•ng flatMap() ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu l·ªìng nhau.
-Ki·ªÉm tra ƒëi·ªÅu ki·ªán (allMatch(), anyMatch(), noneMatch()).
-T√≠nh to√°n (reduce()) t·ªïng gi√° tr·ªã s·∫£n ph·∫©m.
-Nh√≥m s·∫£n ph·∫©m (groupingBy()) theo gi√° tr·ªã.

====>Trong Java, Optional<T> l√† m·ªôt l·ªõp thu·ªôc g√≥i java.util ƒë∆∞·ª£c gi·ªõi thi·ªáu t·ª´ Java 8 nh·∫±m x·ª≠ l√Ω t√¨nh hu·ªëng gi√° tr·ªã c√≥ th·ªÉ null,
gi√∫p tr√°nh l·ªói NullPointerException (NPE).



==========C√ÇU H·ªéI PH·ªéNG V·∫§N===========
2. S·ª∞ kh√°c bi·ªát gi·ªØa Collection v√† Stream l√† g√¨?
-collection : L∆∞u tr·ªØ c√°c ph·∫ßn t·ª≠ d·ªØ li·ªáu v√† c√≥ th·ªÉ th·ª±c hi·ªán c√°c thao t√°c
tr√™n to√†n b·ªô ho·∫∑c m·ªôt ph·∫ßn c·ªßa t·∫≠p d·ªØ li·ªáu ƒë√≥.
-stream : Kh√¥ng l∆∞u tr·ªØ d·ªØ li·ªáu m√† ch·ªâ ƒë·∫°i di·ªán cho c√°c ph·∫ßn t·ª≠ t√≠nh to√°n
v√† c√πng c·∫•p c√°ch ƒë·ªÉ x·ª≠ l√Ω ch√∫ng m·ªôt c√°ch tu·∫ßn t·ª± ho·∫∑c song song. Stream
c√≥ th·ªÉ l√† v√¥ h·∫°n v√† ch·ªâ x·ª≠ l√Ω d·ªØ li·ªáu khi c·∫ßn

4. S·ª± kh√°c nhau gi·ªØa FlatMap() v√† Map() l√† g√¨?
- map(): D√πng ƒë·ªÉ bi·∫øn ƒë·ªïi t·ª´ng ph·∫ßn t·ª≠ trong Stream th√†nh m·ªôt ƒë·ªëi t∆∞·ª£ng
kh√°c. N√≥ tr·∫£ v·ªÅ m·ªôt Stream ch·ª©a c√°c ƒë·ªëi t∆∞·ª£ng m·ªõi .
- flatMap(): D√πng ƒë·ªÉ bi·∫øn ƒë·ªïi t·ª´ng ph·∫ßn t·ª≠ th√†nh m·ªôt Stream m·ªõi, sau ƒë√≥ g·ªôp
t·∫•t c·∫£ c√°c Stream con th√†nh m·ªôt Stream

12.ƒêi·ªÅu g√¨ s·∫Ω xay ra khi b·∫°n g·ªçi k·∫øt th√∫c nhi·ªÅu l·∫ßn tr√™n m·ªôt Stream() ?
-B·∫°n s·∫Ω g·∫∑p iiilegalStateExeption. M·ªôt Stream ch·ªâ c√≥ th·ªÉ c√≥ m·ªôt thao t√°c k·∫øt
th√∫c. Khi g·ªçi thao t√°ck·∫øt th√∫c l·∫ßn th·ª© hai, exception n√†y s·∫Ω ƒë∆∞·ª£c n√©m ra.

13.B·∫°n c√≥ th·ªÉ gi·∫£i th√≠ch peek() trong Stream kh√¥ng?
-peek() l√† m·ªôt thao t√°c trung gian ch·ªß y·∫øu ƒë∆∞·ª£c d√πng cho m·ª•c ƒë√≠ch g·ª° l·ªói .
N√≥ cho ph√©p b·∫°n ki·ªÉm tra ho·∫∑c l√†m ƒëi·ªÅu g√¨ ƒë√≥ v·ªõi t·ª´ng ph·∫ßn t·ª≠ trong Stream
m√† kh√¥ng c·∫ßn thay ƒë·ªïi k·∫øt qu·∫£ c·ªßa Stream.

14. Stream c√≥ x·ª≠ l√Ω c√°c ph·∫ßn t·ª≠ tr√πng l·∫∑p kh√¥ng ?
- c√≥ s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c distinct()

15. B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng Stream v·ªõi I/O (input/output) kh√¥ng?
- c√≥ b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng Stream ƒë·ªÉ x·ª≠ l√Ω c√°c t·ªáp tin ho·∫∑c lu·ªìng d·ªØ li·ªáu. V√≠ d·ª•, b·∫°n c√≥
th·ªÉ s·ª≠ d·ª•ng Files.lines() ƒë·ªÉ ƒë·ªçc t·ª´ng d√≤ng c·ªßa m·ªôt t·ªáp v√† x·ª≠ l√Ω ch√∫ng v·ªõi Stream API

16. L·ª£i √≠ch ch√≠nh c·ªßa Stream API?
- StreamAPI gi√∫p m√£ ngu·ªìn ng·∫Øn g·ªçn , d·ªÖ ƒë·ªçc ,h·ªó tro x·ª≠ l√Ω tu·∫ßn t·ª± song song, t·∫≠n d·ª•ng
s·ª©c m·∫°nh c·ªßa l·∫≠p tr√¨nh h√†m, gi·∫£m thi·ªÉu l·ªói do v√≤ng l·∫∑p ph·ª©c t·∫°p v√† tƒÉng hi·ªáu nƒÉng khi
x·ª≠ l√Ω t·∫≠p d·ªØ li·ªáu l·ªõn

17. Stream APi c√≥ ·∫£nh h∆∞·ªüng ƒë·∫øn hi·ªáu xu·∫•t kh√¥ng?
- Stream Api ƒë∆∞·ª£c t·ªëi ∆∞u ho√° ƒë·ªÉ hi·ªáu su·∫•t t·ªët h∆°n so v·ªõi c√°c v√≤ng l·∫∑p th√¥ng th∆∞·ªùng
trong nhi·ªÅu tr∆∞·ªùng h·ª£p, ƒë·∫∑c bi·ªát khi x·ª≠ l√Ω song song so v·ªõi parallelStream(). Tuy nhi√™n ,
v·ªõi c√° t·∫≠p d·ªØ li·ªáu nh·ªè , ƒë√¥i khi vi·ªác s·ª≠ d·ª•ng v√≤ng l·∫∑p th√¥ng th∆∞·ªùng l·∫°i nhanh h∆°n
do chi ph√≠ c·ªßa vi·ªác t·∫°o stream()

18. Khi n√†o n√™n s·ª≠ d·ª•ng parallelStream() thay v√¨ stream ?
-B·∫°n n√™n s·ª≠ d·ª•ng parallelStream() khi l√†m vi·ªác t·∫≠p d·ªØ li·ªáu l·ªõn v√† khi c√≥ c√°c t√°c
v·ª• t√≠nh to√°n nƒÉnngj m√† c√≥ th·ªÉ chia nh·ªè x·ª≠ l√Ω song song m·ªôt c√°ch ƒë·ªôc l·∫≠p . Tuy nhi√™n
kh√¥ng ph·∫£i m·ªçi tr∆∞·ªùng h·ª£p ƒë·ªÅu ph√π h·ª£p v·ªõi vi·ªác x·ª≠ l√Ω song song do chi ph√≠ t·∫°o c√°c
lu·ªìng (threads) va ƒë·ªìng b·ªô d·ªØ li·ªáu

19. s·ª± kh√°c nhau gi·ªØu sum() v√† reduce() ?
‚úÖ D√πng sum() khi:
-B·∫°n ch·ªâ c·∫ßn t√≠nh t·ªïng.
-D·ªØ li·ªáu l√† ki·ªÉu s·ªë (int, long, double).

‚úÖ D√πng reduce() khi:
-B·∫°n mu·ªën th·ª±c hi·ªán ph√©p to√°n kh√°c ngo√†i ph√©p c·ªông (nh∆∞ nh√¢n, t√¨m gi√° tr·ªã l·ªõn nh·∫•t, n·ªëi chu·ªói, v.v.).
-B·∫°n l√†m vi·ªác v·ªõi ki·ªÉu d·ªØ li·ªáu kh√¥ng ph·∫£i s·ªë (v√≠ d·ª•: String, List<T>).
-B·∫°n mu·ªën x·ª≠ l√Ω d·ªØ li·ªáu theo c√°ch t√πy ch·ªânh.

v√≠ d·ª•:
- double totalPrice = products.stream()
                 .map(Product::getPrice)
                 .reduce(0.0, Double::sum);
         System.out.println("\nüîπ T·ªïng gi√° tr·ªã s·∫£n ph·∫©m: " + totalPrice);
- int product = Arrays.asList(1, 2, 3, 4, 5)
                .stream()
                .reduce(1, (a, b) -> a * b);
        System.out.println("T√≠ch c√°c s·ªë: " + product); // K·∫øt qu·∫£: 120